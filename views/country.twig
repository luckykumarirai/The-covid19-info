{% extends 'layout.twig' %}

{% block body %}

<center>
<div class="container">
    <br><br>
    <h2 class="h2">{{ country }}</h2><br>
    <div class="row">
		<div class="col-sm-5" style="border:1px solid black;border-radius:5px;padding:1%;">
			<h4 style="color:blue;">Total Confirmed: </h4>
			<p style="font-size:24px;color:gray;" id="value1">{{countrytotal.cases}}</p>
			<i class='fa fa-arrow-up' style='color:red;font-size:20px;'> {{countrytotal.todayCases}}</i>
		</div>
		<div class="col-sm-5 ml-auto" style="border:1px solid black;border-radius:5px;padding:1%;">
			<h4 style="color:red;">Total Deaths: </h4>
			<p style="font-size:24px;color:gray;" id="value2">{{countrytotal.deaths}}</p>
			<i class='fa fa-arrow-up' style='color:red;font-size:20px;'> {{countrytotal.todayDeaths}}</i>
		</div>
    </div>
    <br><br>
    <div class="row">
		<div class="col-sm-5" style="border:1px solid black;border-radius:5px;padding:1%;">
			<h4 style="color:green;">Total Recovered: </h4>
			<p style="font-size:24px;color:gray;" id="value3">{{countrytotal.recovered}}</p>
		</div>
		<div class="col-sm-5 ml-auto" style="border:1px solid black;border-radius:5px;padding:1%;">
			<h4 style="color:orange;">Total Active: </h4>
			<p style="font-size:24px;color:gray;" id="value4">{{countrytotal.active}}</p>
		</div>
    </div>
    <br><br>
	<div class="row">
		<div class="col-sm-12" style="height:420px;border:1px solid black;border-radius:5px;padding:1%;">
			<div id="chartContainer"></div>
		</div>
	</div>
	<br><br>
	<div class="row">
		<div class="col-sm-12" style="height:420px;border:1px solid black;border-radius:5px;padding:1%;">
			<div id="chartContainer1"></div>
		</div>
	</div>
	<br><br>
	<div class="row">
		<div class="col-sm-12" style="height:420px;border:1px solid black;border-radius:5px;padding:1%;">
			<div id="chartContainer3"></div>
		</div>
	</div><br><br>
</div>
</center>
<script>
window.onload = function() {
var dataPoints1 = [];
var chart1 = new CanvasJS.Chart("chartContainer1", {
	animationEnabled: true,
	theme: "light2",
  	type: "line",
	title: {
		text: "Daily Confirmed cases"
    },
    axisX:{      
        valueFormatString: "DD-MMM" ,
        labelAngle: -50
    },
	axisY: {
		title: "Cases",
		titleFontSize: 24,
		includeZero: true
	},
	data: [{
		color: "blue",
        type: "column",
        xValueFormatString: "DD-MMM",
		yValueFormatString: "#,### Cases",
		dataPoints: dataPoints1
	}]
});
function addData1(data) {
    var datas=data.{{ country }};
	dataPoints1.push({
		x: new Date(datas[0].date),
		y: parseInt(datas[0].confirmed)
	});
	for (var i = 1; i < datas.length; i++) {
		if(parseInt(datas[i].confirmed)-parseInt(datas[i-1].confirmed)<0){
			dataPoints1.push({
				x: new Date(datas[i].date),
				y: 0
			});
		}
		else{
			dataPoints1.push({
				x: new Date(datas[i].date),
				y: parseInt(datas[i].confirmed)-parseInt(datas[i-1].confirmed)
			});
		}
	}
	chart1.render();
}
$.getJSON("https://pomber.github.io/covid19/timeseries.json", addData1);

var dataPoints3 = [];
var chart3 = new CanvasJS.Chart("chartContainer3", {
	animationEnabled: true,
	theme: "light2",
  	type: "line",
	title: {
		text: "Daily Deaths cases"
    },
    axisX:{      
        valueFormatString: "DD-MMM" ,
        labelAngle: -50
    },
	axisY: {
		title: "Cases",
		titleFontSize: 24,
		includeZero: true
	},
	data: [{
		color: "red",
        type: "column",
        xValueFormatString: "DD-MMM",
		yValueFormatString: "#,### Cases",
		dataPoints: dataPoints3
	}]
});
function addData3(data) {
    var datas=data.{{ country }};
	dataPoints3.push({
		x: new Date(datas[0].date),
		y: parseInt(datas[0].deaths)
	});
	for (var i = 1; i < datas.length; i++) {
		if(parseInt(datas[i].deaths)-parseInt(datas[i-1].deaths)<0){
			dataPoints3.push({
				x: new Date(datas[i].date),
				y: 0
			});
		}
		else{
			dataPoints3.push({
				x: new Date(datas[i].date),
				y: parseInt(datas[i].deaths)-parseInt(datas[i-1].deaths)
			});
		}
	}
	chart3.render();
}
$.getJSON("https://pomber.github.io/covid19/timeseries.json", addData3);

var chart = new CanvasJS.Chart("chartContainer", {
	animationEnabled: true,
	title: {
		text: "{{ country }} covid-19 total data"
	},
	data: [{
		type: "doughnut",
		startAngle: 240,
		yValueFormatString: "##,###,###",
		indexLabel: "{label} {y}",
		dataPoints: [
			{y: {{countrytotal.cases}}, label: "Total Confirmed", color:"blue"},
    		{y: {{countrytotal.deaths}}, label: "Total Deaths", color:"red"},
			{y: {{countrytotal.recovered}}, label: "Total Recovered", color:"green"},
			{y: {{countrytotal.active}}, label: "Total Active", color:"orange"}
		]
	}]
});
chart.render();

}
</script>
<script>
function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
var val1 = parseInt($('#value1').text());
val1 = numberWithCommas(val1);
$('#value1').text(val1);

var val2 = parseInt($('#value2').text());
val2 = numberWithCommas(val2);
$('#value2').text(val2);

var val3 = parseInt($('#value3').text());
val3 = numberWithCommas(val3);
$('#value3').text(val3);

var val4 = parseInt($('#value4').text());
val4 = numberWithCommas(val4);
$('#value4').text(val4);

</script>
<script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
{% endblock %}